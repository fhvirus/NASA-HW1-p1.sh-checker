[1;34m----------------- Input 0: --key-generation 2477 0xb23 ----------------------------------------------------------------------------------------------------------------------------------------[0m
Public exponent: 65537
Private exponent: 2139473
Modulus: 7061927

Your exit code: 0

[1;34m----------------- Input 1: --key-generation 707981 906313 -------------------------------------------------------------------------------------------------------------------------------------[0m
Public exponent: 65537
Private exponent: 64657547393
Modulus: 641652384053

Your exit code: 0

[1;34m----------------- Input 2: --encrypt --public-exponent 65537 --modulus 641652384053 testfile --------------------------------------------------------------------------------------------------[0m
610964881505

Your exit code: 0

[1;34m----------------- Input 3: --key-generation 707981 906313 --encrypt testfile ------------------------------------------------------------------------------------------------------------------[0m
Public exponent: 65537
Private exponent: 64657547393
Modulus: 641652384053
610964881505

Your exit code: 0

[1;34m----------------- Input 4: --decrypt --private-exponent 64657547393 --modulus 641652384053 testfile -------------------------------------------------------------------------------------------[0m
539006752977

Your exit code: 0

[1;34m----------------- Input 5: --key-generation 2477 0xb23 ----------------------------------------------------------------------------------------------------------------------------------------[0m
Public exponent: 65537
Private exponent: 2139473
Modulus: 7061927

Your exit code: 0

[1;34m----------------- Input 6: --encrypt --public-exponent 65537 --modulus 0x9565766135 testfile --------------------------------------------------------------------------------------------------[0m
610964881505

Your exit code: 0

[1;34m----------------- Input 7: --encrypt --key-generation 0x79FF 29327 testfile -------------------------------------------------------------------------------------------------------------------[0m
Public exponent: 65537
Private exponent: 28088873
Modulus: 915911537
588066733

Your exit code: 0

[1;34m----------------- Input 8: --decrypt --private-exponent 4352849 --modulus 8523649 testfile ----------------------------------------------------------------------------------------------------[0m
7095580

Your exit code: 0

[1;34m----------------- Input 9: --key-generation 7 11 ----------------------------------------------------------------------------------------------------------------------------------------------[0m
Public exponent: 65537
Private exponent: 53
Modulus: 77

Your exit code: 0

[1;31m----------------- Input 10:  ------------------------------------------------------------------------------------------------------------------------------------------------------------------[0m
This command is an RSA algorithm implementation written in shell script.
There are three modes to choose from:

I. Key generation:
usage: ./p1.sh --key-generation <1st prime number> <2nd prime number>
eg: ./p1.sh --key-generation 707981 906313

II. Encrypt mode:
usage: ./p1.sh --encrypt --public-exponent <e> --modulus <n> <file>
eg: ./p1.sh --encrypt --public-exponent 65537 --modulus 641652384053 testfile
usage: ./p1.sh --key-generation <1st prime number> <2nd prime number> --encrypt <file>
eg: ./p1.sh --key-generation 707981 906313 --encrypt testfile

III. Decrypt mode:
usage: ./p1.sh --decrypt --private-exponent <d> --modulus <n> <file>
eg: ./p1.sh --decrypt --private-exponent 64657547393 --modulus 641652384053 testfile

Your exit code: 1

[1;31m----------------- Input 11: --key-generation --------------------------------------------------------------------------------------------------------------------------------------------------[0m
This command is an RSA algorithm implementation written in shell script.
There are three modes to choose from:

I. Key generation:
usage: ./p1.sh --key-generation <1st prime number> <2nd prime number>
eg: ./p1.sh --key-generation 707981 906313

II. Encrypt mode:
usage: ./p1.sh --encrypt --public-exponent <e> --modulus <n> <file>
eg: ./p1.sh --encrypt --public-exponent 65537 --modulus 641652384053 testfile
usage: ./p1.sh --key-generation <1st prime number> <2nd prime number> --encrypt <file>
eg: ./p1.sh --key-generation 707981 906313 --encrypt testfile

III. Decrypt mode:
usage: ./p1.sh --decrypt --private-exponent <d> --modulus <n> <file>
eg: ./p1.sh --decrypt --private-exponent 64657547393 --modulus 641652384053 testfile

Your exit code: 1

[1;31m----------------- Input 12: --encrypt --public-exponent 34x7b --modulus ab92o testfile --------------------------------------------------------------------------------------------------------[0m
This command is an RSA algorithm implementation written in shell script.
There are three modes to choose from:

I. Key generation:
usage: ./p1.sh --key-generation <1st prime number> <2nd prime number>
eg: ./p1.sh --key-generation 707981 906313

II. Encrypt mode:
usage: ./p1.sh --encrypt --public-exponent <e> --modulus <n> <file>
eg: ./p1.sh --encrypt --public-exponent 65537 --modulus 641652384053 testfile
usage: ./p1.sh --key-generation <1st prime number> <2nd prime number> --encrypt <file>
eg: ./p1.sh --key-generation 707981 906313 --encrypt testfile

III. Decrypt mode:
usage: ./p1.sh --decrypt --private-exponent <d> --modulus <n> <file>
eg: ./p1.sh --decrypt --private-exponent 64657547393 --modulus 641652384053 testfile

Your exit code: 1

[1;31m----------------- Input 13: --encrypt --key-generation 0x79Ff 29327 testfile ------------------------------------------------------------------------------------------------------------------[0m
This command is an RSA algorithm implementation written in shell script.
There are three modes to choose from:

I. Key generation:
usage: ./p1.sh --key-generation <1st prime number> <2nd prime number>
eg: ./p1.sh --key-generation 707981 906313

II. Encrypt mode:
usage: ./p1.sh --encrypt --public-exponent <e> --modulus <n> <file>
eg: ./p1.sh --encrypt --public-exponent 65537 --modulus 641652384053 testfile
usage: ./p1.sh --key-generation <1st prime number> <2nd prime number> --encrypt <file>
eg: ./p1.sh --key-generation 707981 906313 --encrypt testfile

III. Decrypt mode:
usage: ./p1.sh --decrypt --private-exponent <d> --modulus <n> <file>
eg: ./p1.sh --decrypt --private-exponent 64657547393 --modulus 641652384053 testfile

Your exit code: 1

[1;31m----------------- Input 14: --encrypt -k 0x79FF 29327 testfile --------------------------------------------------------------------------------------------------------------------------------[0m
This command is an RSA algorithm implementation written in shell script.
There are three modes to choose from:

I. Key generation:
usage: ./p1.sh --key-generation <1st prime number> <2nd prime number>
eg: ./p1.sh --key-generation 707981 906313

II. Encrypt mode:
usage: ./p1.sh --encrypt --public-exponent <e> --modulus <n> <file>
eg: ./p1.sh --encrypt --public-exponent 65537 --modulus 641652384053 testfile
usage: ./p1.sh --key-generation <1st prime number> <2nd prime number> --encrypt <file>
eg: ./p1.sh --key-generation 707981 906313 --encrypt testfile

III. Decrypt mode:
usage: ./p1.sh --decrypt --private-exponent <d> --modulus <n> <file>
eg: ./p1.sh --decrypt --private-exponent 64657547393 --modulus 641652384053 testfile

Your exit code: 1

[1;31m----------------- Input 15: --encrypt -k 0x79FF 29327 testdir ---------------------------------------------------------------------------------------------------------------------------------[0m
This command is an RSA algorithm implementation written in shell script.
There are three modes to choose from:

I. Key generation:
usage: ./p1.sh --key-generation <1st prime number> <2nd prime number>
eg: ./p1.sh --key-generation 707981 906313

II. Encrypt mode:
usage: ./p1.sh --encrypt --public-exponent <e> --modulus <n> <file>
eg: ./p1.sh --encrypt --public-exponent 65537 --modulus 641652384053 testfile
usage: ./p1.sh --key-generation <1st prime number> <2nd prime number> --encrypt <file>
eg: ./p1.sh --key-generation 707981 906313 --encrypt testfile

III. Decrypt mode:
usage: ./p1.sh --decrypt --private-exponent <d> --modulus <n> <file>
eg: ./p1.sh --decrypt --private-exponent 64657547393 --modulus 641652384053 testfile

Your exit code: 1

[1;31m----------------- Input 16: --encrypt 0x79FF 29327 testdir ------------------------------------------------------------------------------------------------------------------------------------[0m
This command is an RSA algorithm implementation written in shell script.
There are three modes to choose from:

I. Key generation:
usage: ./p1.sh --key-generation <1st prime number> <2nd prime number>
eg: ./p1.sh --key-generation 707981 906313

II. Encrypt mode:
usage: ./p1.sh --encrypt --public-exponent <e> --modulus <n> <file>
eg: ./p1.sh --encrypt --public-exponent 65537 --modulus 641652384053 testfile
usage: ./p1.sh --key-generation <1st prime number> <2nd prime number> --encrypt <file>
eg: ./p1.sh --key-generation 707981 906313 --encrypt testfile

III. Decrypt mode:
usage: ./p1.sh --decrypt --private-exponent <d> --modulus <n> <file>
eg: ./p1.sh --decrypt --private-exponent 64657547393 --modulus 641652384053 testfile

Your exit code: 1

[1;31m----------------- Input 17: testfile ----------------------------------------------------------------------------------------------------------------------------------------------------------[0m
This command is an RSA algorithm implementation written in shell script.
There are three modes to choose from:

I. Key generation:
usage: ./p1.sh --key-generation <1st prime number> <2nd prime number>
eg: ./p1.sh --key-generation 707981 906313

II. Encrypt mode:
usage: ./p1.sh --encrypt --public-exponent <e> --modulus <n> <file>
eg: ./p1.sh --encrypt --public-exponent 65537 --modulus 641652384053 testfile
usage: ./p1.sh --key-generation <1st prime number> <2nd prime number> --encrypt <file>
eg: ./p1.sh --key-generation 707981 906313 --encrypt testfile

III. Decrypt mode:
usage: ./p1.sh --decrypt --private-exponent <d> --modulus <n> <file>
eg: ./p1.sh --decrypt --private-exponent 64657547393 --modulus 641652384053 testfile

Your exit code: 1

[1;31m----------------- Input 18: --key-generation 2477 10xb23 --------------------------------------------------------------------------------------------------------------------------------------[0m
This command is an RSA algorithm implementation written in shell script.
There are three modes to choose from:

I. Key generation:
usage: ./p1.sh --key-generation <1st prime number> <2nd prime number>
eg: ./p1.sh --key-generation 707981 906313

II. Encrypt mode:
usage: ./p1.sh --encrypt --public-exponent <e> --modulus <n> <file>
eg: ./p1.sh --encrypt --public-exponent 65537 --modulus 641652384053 testfile
usage: ./p1.sh --key-generation <1st prime number> <2nd prime number> --encrypt <file>
eg: ./p1.sh --key-generation 707981 906313 --encrypt testfile

III. Decrypt mode:
usage: ./p1.sh --decrypt --private-exponent <d> --modulus <n> <file>
eg: ./p1.sh --decrypt --private-exponent 64657547393 --modulus 641652384053 testfile

Your exit code: 1

[1;31m----------------- Input 19: --key-generation 2477 0xb23g --------------------------------------------------------------------------------------------------------------------------------------[0m
This command is an RSA algorithm implementation written in shell script.
There are three modes to choose from:

I. Key generation:
usage: ./p1.sh --key-generation <1st prime number> <2nd prime number>
eg: ./p1.sh --key-generation 707981 906313

II. Encrypt mode:
usage: ./p1.sh --encrypt --public-exponent <e> --modulus <n> <file>
eg: ./p1.sh --encrypt --public-exponent 65537 --modulus 641652384053 testfile
usage: ./p1.sh --key-generation <1st prime number> <2nd prime number> --encrypt <file>
eg: ./p1.sh --key-generation 707981 906313 --encrypt testfile

III. Decrypt mode:
usage: ./p1.sh --decrypt --private-exponent <d> --modulus <n> <file>
eg: ./p1.sh --decrypt --private-exponent 64657547393 --modulus 641652384053 testfile

Your exit code: 1

[1;31m----------------- Input 20: --key-generation 2477 0Xb23 ---------------------------------------------------------------------------------------------------------------------------------------[0m
This command is an RSA algorithm implementation written in shell script.
There are three modes to choose from:

I. Key generation:
usage: ./p1.sh --key-generation <1st prime number> <2nd prime number>
eg: ./p1.sh --key-generation 707981 906313

II. Encrypt mode:
usage: ./p1.sh --encrypt --public-exponent <e> --modulus <n> <file>
eg: ./p1.sh --encrypt --public-exponent 65537 --modulus 641652384053 testfile
usage: ./p1.sh --key-generation <1st prime number> <2nd prime number> --encrypt <file>
eg: ./p1.sh --key-generation 707981 906313 --encrypt testfile

III. Decrypt mode:
usage: ./p1.sh --decrypt --private-exponent <d> --modulus <n> <file>
eg: ./p1.sh --decrypt --private-exponent 64657547393 --modulus 641652384053 testfile

Your exit code: 1

[1;31m----------------- Input 21: --key-generation 707981 906313 --encrypt --public-exponent 104857601 testfile -------------------------------------------------------------------------------------[0m
This command is an RSA algorithm implementation written in shell script.
There are three modes to choose from:

I. Key generation:
usage: ./p1.sh --key-generation <1st prime number> <2nd prime number>
eg: ./p1.sh --key-generation 707981 906313

II. Encrypt mode:
usage: ./p1.sh --encrypt --public-exponent <e> --modulus <n> <file>
eg: ./p1.sh --encrypt --public-exponent 65537 --modulus 641652384053 testfile
usage: ./p1.sh --key-generation <1st prime number> <2nd prime number> --encrypt <file>
eg: ./p1.sh --key-generation 707981 906313 --encrypt testfile

III. Decrypt mode:
usage: ./p1.sh --decrypt --private-exponent <d> --modulus <n> <file>
eg: ./p1.sh --decrypt --private-exponent 64657547393 --modulus 641652384053 testfile

Your exit code: 1

[1;31m----------------- Input 22: --key-generation 707981 906313 --encrypt --private-exponent 104857601 testfile ------------------------------------------------------------------------------------[0m
This command is an RSA algorithm implementation written in shell script.
There are three modes to choose from:

I. Key generation:
usage: ./p1.sh --key-generation <1st prime number> <2nd prime number>
eg: ./p1.sh --key-generation 707981 906313

II. Encrypt mode:
usage: ./p1.sh --encrypt --public-exponent <e> --modulus <n> <file>
eg: ./p1.sh --encrypt --public-exponent 65537 --modulus 641652384053 testfile
usage: ./p1.sh --key-generation <1st prime number> <2nd prime number> --encrypt <file>
eg: ./p1.sh --key-generation 707981 906313 --encrypt testfile

III. Decrypt mode:
usage: ./p1.sh --decrypt --private-exponent <d> --modulus <n> <file>
eg: ./p1.sh --decrypt --private-exponent 64657547393 --modulus 641652384053 testfile

Your exit code: 1

[1;31m----------------- Input 23: --decrypt --key-generation 0x79FF 29327 testfile ------------------------------------------------------------------------------------------------------------------[0m
This command is an RSA algorithm implementation written in shell script.
There are three modes to choose from:

I. Key generation:
usage: ./p1.sh --key-generation <1st prime number> <2nd prime number>
eg: ./p1.sh --key-generation 707981 906313

II. Encrypt mode:
usage: ./p1.sh --encrypt --public-exponent <e> --modulus <n> <file>
eg: ./p1.sh --encrypt --public-exponent 65537 --modulus 641652384053 testfile
usage: ./p1.sh --key-generation <1st prime number> <2nd prime number> --encrypt <file>
eg: ./p1.sh --key-generation 707981 906313 --encrypt testfile

III. Decrypt mode:
usage: ./p1.sh --decrypt --private-exponent <d> --modulus <n> <file>
eg: ./p1.sh --decrypt --private-exponent 64657547393 --modulus 641652384053 testfile

Your exit code: 1

[1;31m----------------- Input 24: --encrypt --decrypt --key-generation 0x79FF 29327 testfile --------------------------------------------------------------------------------------------------------[0m
This command is an RSA algorithm implementation written in shell script.
There are three modes to choose from:

I. Key generation:
usage: ./p1.sh --key-generation <1st prime number> <2nd prime number>
eg: ./p1.sh --key-generation 707981 906313

II. Encrypt mode:
usage: ./p1.sh --encrypt --public-exponent <e> --modulus <n> <file>
eg: ./p1.sh --encrypt --public-exponent 65537 --modulus 641652384053 testfile
usage: ./p1.sh --key-generation <1st prime number> <2nd prime number> --encrypt <file>
eg: ./p1.sh --key-generation 707981 906313 --encrypt testfile

III. Decrypt mode:
usage: ./p1.sh --decrypt --private-exponent <d> --modulus <n> <file>
eg: ./p1.sh --decrypt --private-exponent 64657547393 --modulus 641652384053 testfile

Your exit code: 1

[1;31m----------------- Input 25: --encrypt --public-exponent 65537 --private-exponent 4352849 --modulus 0x9565766135 testfile ----------------------------------------------------------------------[0m
This command is an RSA algorithm implementation written in shell script.
There are three modes to choose from:

I. Key generation:
usage: ./p1.sh --key-generation <1st prime number> <2nd prime number>
eg: ./p1.sh --key-generation 707981 906313

II. Encrypt mode:
usage: ./p1.sh --encrypt --public-exponent <e> --modulus <n> <file>
eg: ./p1.sh --encrypt --public-exponent 65537 --modulus 641652384053 testfile
usage: ./p1.sh --key-generation <1st prime number> <2nd prime number> --encrypt <file>
eg: ./p1.sh --key-generation 707981 906313 --encrypt testfile

III. Decrypt mode:
usage: ./p1.sh --decrypt --private-exponent <d> --modulus <n> <file>
eg: ./p1.sh --decrypt --private-exponent 64657547393 --modulus 641652384053 testfile

Your exit code: 1

[1;31m----------------- Input 26: --decrypt --private-exponent 4352849 --public-exponent 65537 --modulus 8523649 testfile ---------------------------------------------------------------------------[0m
This command is an RSA algorithm implementation written in shell script.
There are three modes to choose from:

I. Key generation:
usage: ./p1.sh --key-generation <1st prime number> <2nd prime number>
eg: ./p1.sh --key-generation 707981 906313

II. Encrypt mode:
usage: ./p1.sh --encrypt --public-exponent <e> --modulus <n> <file>
eg: ./p1.sh --encrypt --public-exponent 65537 --modulus 641652384053 testfile
usage: ./p1.sh --key-generation <1st prime number> <2nd prime number> --encrypt <file>
eg: ./p1.sh --key-generation 707981 906313 --encrypt testfile

III. Decrypt mode:
usage: ./p1.sh --decrypt --private-exponent <d> --modulus <n> <file>
eg: ./p1.sh --decrypt --private-exponent 64657547393 --modulus 641652384053 testfile

Your exit code: 1

[1;31m----------------- Input 27: --encrypt --public-exponent 65537 --modulus 0x9565766135 --key-generation 2477 0xb23 testfile ---------------------------------------------------------------------[0m
This command is an RSA algorithm implementation written in shell script.
There are three modes to choose from:

I. Key generation:
usage: ./p1.sh --key-generation <1st prime number> <2nd prime number>
eg: ./p1.sh --key-generation 707981 906313

II. Encrypt mode:
usage: ./p1.sh --encrypt --public-exponent <e> --modulus <n> <file>
eg: ./p1.sh --encrypt --public-exponent 65537 --modulus 641652384053 testfile
usage: ./p1.sh --key-generation <1st prime number> <2nd prime number> --encrypt <file>
eg: ./p1.sh --key-generation 707981 906313 --encrypt testfile

III. Decrypt mode:
usage: ./p1.sh --decrypt --private-exponent <d> --modulus <n> <file>
eg: ./p1.sh --decrypt --private-exponent 64657547393 --modulus 641652384053 testfile

Your exit code: 1

[1;34m----------------- Input 28: --key-generation 13052364169251182712529865530917160715901261508356286906018154708448386607095177886191121821309803457264690744541779713708076734887501915637090058452842683 11584458183371246231518993670207071606487618084225973680621631502269188790939395983847786431282010797563963081454324788582155559358721471061392643388381643 [0m
Public exponent: 65537
Private exponent: 2475586314562149887563091114028841530512636433382089403583992864425755523075902029618429654772759438917216267007604218814909988993505664771778027255284273597435996764939196324912442493883297562401109426060381408684727335190947408333936087984538266633566575671799635418536078495474735850445694758274765250949
Modulus: 151204566912823501566842779440920957488543013918510711316574222139674501133108472800655195046451384294797392815356344537253267426530643757826669685209287479208269621945653650056116185021370880028284539884888001719908275364741400178079153727857632256645617987836242311504874122811910055571624813462248244068169

Your exit code: 0

[1;34m----------------- Input 29: --encrypt --public-exponent 65537 --modulus 151204566912823501566842779440920957488543013918510711316574222139674501133108472800655195046451384294797392815356344537253267426530643757826669685209287479208269621945653650056116185021370880028284539884888001719908275364741400178079153727857632256645617987836242311504874122811910055571624813462248244068169 testfile_en [0m
86793271278411766372549932979267579871156181562891540895451788524654436795504789015735325538919520704368128798517385583538291102338311670083425117665185764158830402342937846456197973679543240277416752695635298006244531507325204219878867405332655569959535230531921867029879028635984793749518202850437073297116
12597547935491816303924703627325608047374820429502176963073525358519597494805926553475922101279112791063911201599058033875111234999674884538016701531874180572245673937859690008863704358750483274074758724537927992583464019070451790399834015484644721382892006914704230210731076814307055699441757742098051292543

Your exit code: 0

[1;34m----------------- Input 30: --encrypt --key-generation 13052364169251182712529865530917160715901261508356286906018154708448386607095177886191121821309803457264690744541779713708076734887501915637090058452842683 11584458183371246231518993670207071606487618084225973680621631502269188790939395983847786431282010797563963081454324788582155559358721471061392643388381643 testfile_en [0m
Public exponent: 65537
Private exponent: 2475586314562149887563091114028841530512636433382089403583992864425755523075902029618429654772759438917216267007604218814909988993505664771778027255284273597435996764939196324912442493883297562401109426060381408684727335190947408333936087984538266633566575671799635418536078495474735850445694758274765250949
Modulus: 151204566912823501566842779440920957488543013918510711316574222139674501133108472800655195046451384294797392815356344537253267426530643757826669685209287479208269621945653650056116185021370880028284539884888001719908275364741400178079153727857632256645617987836242311504874122811910055571624813462248244068169
86793271278411766372549932979267579871156181562891540895451788524654436795504789015735325538919520704368128798517385583538291102338311670083425117665185764158830402342937846456197973679543240277416752695635298006244531507325204219878867405332655569959535230531921867029879028635984793749518202850437073297116
12597547935491816303924703627325608047374820429502176963073525358519597494805926553475922101279112791063911201599058033875111234999674884538016701531874180572245673937859690008863704358750483274074758724537927992583464019070451790399834015484644721382892006914704230210731076814307055699441757742098051292543

Your exit code: 0

[1;34m----------------- Input 31: --decrypt --private-exponent 2475586314562149887563091114028841530512636433382089403583992864425755523075902029618429654772759438917216267007604218814909988993505664771778027255284273597435996764939196324912442493883297562401109426060381408684727335190947408333936087984538266633566575671799635418536078495474735850445694758274765250949 --modulus 151204566912823501566842779440920957488543013918510711316574222139674501133108472800655195046451384294797392815356344537253267426530643757826669685209287479208269621945653650056116185021370880028284539884888001719908275364741400178079153727857632256645617987836242311504874122811910055571624813462248244068169 testfile_de [0m
3571279
3298875

Your exit code: 0

